<h3>Mission 10.2: Hit or Stand Based on the Dealer's Hand &mdash; Even More Practice with If Statements and Boolean Expressions</h3>
Beautiful work, [NAME]. Now let's finish this up. In the last section we said that if the dealer has a low card showing, he/she will have to hit and is likely to bust. So, modify the program so it also hits if the dealer's upcard is less than or equal to 6 and your total value is less than 12.</p>
<p>Combining the instructions from this section and the past one, you need to make the program hit if you have a total card value of less than 17 and the dealer's upcard is higher than 6 and also hit if the dealer's upcard is less than or equal to 6 and your total value is less than 12. Here are some hints:</p>
<ul>
<li>Boolean expressions (and/or) will be the simplest way to make this work, although you can always use nested if-else statements and elseif statements in place of boolean expressions.</li>
<li>You can call a function more than once in one program. For example, it is okay to have <span class="variables">hit()</span> inside two different if statements.</li>
<li>You can use different numbers than those we recommended, but make sure your ranges in this part and the last don't overlap or leave gaps.</li>
<li>Take a look at previous missions if you've forgotten how to do something.</li>
</ul>
<p>Don't get discouraged if it doesn't work! This is pretty complicated.</p>
<p>If your code is not working properly, take a look at <a show="holyeffwhyistheresomucheffingcode">these</a> examples.</p>

<div class="hiddencode" id="holyeffwhyistheresomucheffingcode">
Booleans and elseif:

name = "David";

if(handStart){
       safeBet(4, 0);
}
else {
       if (totalValue() == 10) {
               doubleDown();
       }
       else if(totalValue() &lt; 17 &amp;&amp; dealerUpCard() &gt; 6){ /*this is the statement
                                                                                                       you wrote last section*/
               hit();
       }
       else if(dealerUpCard() &lt;= 6 &amp;&amp; totalValue() &lt; 12){ /*this is the same statement but
                                               with the new conditions specified in this section. Since both
                                               statements are elseifs, only one of them will be executed.*/
               hit();  /*Notice that hit() has now been called twice in this code. This is
                               perfectly acceptable, and one of the main advantages of methods!*/
       }
       else{
               stand();
       }
}

function safeBet(betAmount, limit){
       if (totalValue() - betAmount &lt; limit) {
               betAmount = totalMoney() - limit;
       }
       bet(betAmount);
}

function totalValue(){
       var length = handValue.length;
       var sum = 0;
       var counter = 0;
       for (counter = 0; counter &lt; length; counter++) {
               sum = sum + handValue[counter];
       }
       return sum;
}

Only booleans:

var name = "David";

if (handStart) {
       safeBet(4, 0);
}
else {
       if (totalValue() == 10) {
               doubleDown();
       }
       /*In this example, the following line is the only one that has been changed from mission 10.1. This
       line is pretty much a direct translation of the the instructions:
               "hits if you have a total card value of less than 17 AND the dealer's upcard is higher than
               6 and it also hits if the dealer's upcard is less than or equal to 6 AND your total value is
               less than 12"
       The two capitalized ANDs have been replaced by &amp;&amp; and the two &amp;&amp; statements are combined with
       a || because either one of them is a sufficient reason to bet. The &amp;&amp; statements are each surounded
       by parentheses so the line is not just evaluated from left to right. Notice how the || effectively
       combines the two else ifs from the previous applications.*/
       else if((totalValue() &lt; 17 &amp;&amp; dealerUpCard() &gt; 6) || (dealerUpCard() &lt;= 6 &amp;&amp; totalValue() &lt; 12)){
               hit();
       }
       else{
               stand();
       }
}

function safeBet(betAmount, limit){
       if (totalValue() - betAmount &lt; limit) {
               betAmount = totalMoney() - limit;
       }
       bet(betAmount);
}

function totalValue(){
       var length = handValue.length;
       var sum = 0;
       var counter = 0;
       for (counter = 0; counter &lt; length; counter++) {
               sum = sum + handValue[counter];
       }
       return sum;
}
</div>